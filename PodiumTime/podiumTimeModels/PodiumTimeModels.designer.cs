#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PodiumTimeModels {
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "PodiumTime")]
    public partial class PodiumTimeModelsDataContext : System.Data.Linq.DataContext {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void InsertEvento(Evento instance);
        partial void UpdateEvento(Evento instance);
        partial void DeleteEvento(Evento instance);
        partial void InsertResultado(Resultado instance);
        partial void UpdateResultado(Resultado instance);
        partial void DeleteResultado(Resultado instance);
        partial void InsertInscricao(Inscricao instance);
        partial void UpdateInscricao(Inscricao instance);
        partial void DeleteInscricao(Inscricao instance);
        partial void InsertProva(Prova instance);
        partial void UpdateProva(Prova instance);
        partial void DeleteProva(Prova instance);
        #endregion

        public PodiumTimeModelsDataContext() :
            base(global::PodiumTimeModels.Properties.Settings.Default.PodiumTimeConnectionString_old, mappingSource) {
            OnCreated();
        }

        public PodiumTimeModelsDataContext(string connection) :
            base(connection, mappingSource) {
            OnCreated();
        }

        public PodiumTimeModelsDataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource) {
            OnCreated();
        }

        public PodiumTimeModelsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource) {
            OnCreated();
        }

        public PodiumTimeModelsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource) {
            OnCreated();
        }

        public System.Data.Linq.Table<Evento> Eventos {
            get {
                return this.GetTable<Evento>();
            }
        }

        public System.Data.Linq.Table<Resultado> Resultados {
            get {
                return this.GetTable<Resultado>();
            }
        }

        public System.Data.Linq.Table<Inscricao> Inscricaos {
            get {
                return this.GetTable<Inscricao>();
            }
        }

        public System.Data.Linq.Table<Prova> Provas {
            get {
                return this.GetTable<Prova>();
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Evento")]
    public partial class Evento : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private System.Nullable<System.DateTime> _Data;

        private string _Nome;

        private bool _Cancelado;

        private string _Descricao;

        private EntitySet<Inscricao> _Inscricaos;

        private EntitySet<Prova> _Provas;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnDataChanging(System.Nullable<System.DateTime> value);
        partial void OnDataChanged();
        partial void OnNomeChanging(string value);
        partial void OnNomeChanged();
        partial void OnCanceladoChanging(bool value);
        partial void OnCanceladoChanged();
        partial void OnDescricaoChanging(string value);
        partial void OnDescricaoChanged();
        #endregion

        public Evento() {
            this._Inscricaos = new EntitySet<Inscricao>(new Action<Inscricao>(this.attach_Inscricaos), new Action<Inscricao>(this.detach_Inscricaos));
            this._Provas = new EntitySet<Prova>(new Action<Prova>(this.attach_Provas), new Action<Prova>(this.detach_Provas));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID {
            get {
                return this._ID;
            }
            set {
                if((this._ID != value)) {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Data", DbType = "Date")]
        public System.Nullable<System.DateTime> Data {
            get {
                return this._Data;
            }
            set {
                if((this._Data != value)) {
                    this.OnDataChanging(value);
                    this.SendPropertyChanging();
                    this._Data = value;
                    this.SendPropertyChanged("Data");
                    this.OnDataChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Nome", DbType = "NVarChar(450) NOT NULL", CanBeNull = false)]
        public string Nome {
            get {
                return this._Nome;
            }
            set {
                if((this._Nome != value)) {
                    this.OnNomeChanging(value);
                    this.SendPropertyChanging();
                    this._Nome = value;
                    this.SendPropertyChanged("Nome");
                    this.OnNomeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Cancelado", DbType = "Bit NOT NULL")]
        public bool Cancelado {
            get {
                return this._Cancelado;
            }
            set {
                if((this._Cancelado != value)) {
                    this.OnCanceladoChanging(value);
                    this.SendPropertyChanging();
                    this._Cancelado = value;
                    this.SendPropertyChanged("Cancelado");
                    this.OnCanceladoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Descricao", DbType = "NVarChar(450)")]
        public string Descricao {
            get {
                return this._Descricao;
            }
            set {
                if((this._Descricao != value)) {
                    this.OnDescricaoChanging(value);
                    this.SendPropertyChanging();
                    this._Descricao = value;
                    this.SendPropertyChanged("Descricao");
                    this.OnDescricaoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Evento_Inscricao", Storage = "_Inscricaos", ThisKey = "ID", OtherKey = "EventoID")]
        public EntitySet<Inscricao> Inscricaos {
            get {
                return this._Inscricaos;
            }
            set {
                this._Inscricaos.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Evento_Prova", Storage = "_Provas", ThisKey = "ID", OtherKey = "EventoID")]
        public EntitySet<Prova> Provas {
            get {
                return this._Provas;
            }
            set {
                this._Provas.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_Inscricaos(Inscricao entity) {
            this.SendPropertyChanging();
            entity.Evento = this;
        }

        private void detach_Inscricaos(Inscricao entity) {
            this.SendPropertyChanging();
            entity.Evento = null;
        }

        private void attach_Provas(Prova entity) {
            this.SendPropertyChanging();
            entity.Evento = this;
        }

        private void detach_Provas(Prova entity) {
            this.SendPropertyChanging();
            entity.Evento = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Resultado")]
    public partial class Resultado : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private string _NomeParticipante;

        private string _Equipa;

        private int _Dorsal;

        private string _DocIdentificacao;

        private int _ProvaID;

        private EntityRef<Prova> _Prova;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnNomeParticipanteChanging(string value);
        partial void OnNomeParticipanteChanged();
        partial void OnEquipaChanging(string value);
        partial void OnEquipaChanged();
        partial void OnDorsalChanging(int value);
        partial void OnDorsalChanged();
        partial void OnDocIdentificacaoChanging(string value);
        partial void OnDocIdentificacaoChanged();
        partial void OnProvaIDChanging(int value);
        partial void OnProvaIDChanged();
        #endregion

        public Resultado() {
            this._Prova = default(EntityRef<Prova>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID {
            get {
                return this._ID;
            }
            set {
                if((this._ID != value)) {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NomeParticipante", DbType = "NVarChar(450) NOT NULL", CanBeNull = false)]
        public string NomeParticipante {
            get {
                return this._NomeParticipante;
            }
            set {
                if((this._NomeParticipante != value)) {
                    this.OnNomeParticipanteChanging(value);
                    this.SendPropertyChanging();
                    this._NomeParticipante = value;
                    this.SendPropertyChanged("NomeParticipante");
                    this.OnNomeParticipanteChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Equipa", DbType = "NVarChar(450)")]
        public string Equipa {
            get {
                return this._Equipa;
            }
            set {
                if((this._Equipa != value)) {
                    this.OnEquipaChanging(value);
                    this.SendPropertyChanging();
                    this._Equipa = value;
                    this.SendPropertyChanged("Equipa");
                    this.OnEquipaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Dorsal", DbType = "Int NOT NULL")]
        public int Dorsal {
            get {
                return this._Dorsal;
            }
            set {
                if((this._Dorsal != value)) {
                    this.OnDorsalChanging(value);
                    this.SendPropertyChanging();
                    this._Dorsal = value;
                    this.SendPropertyChanged("Dorsal");
                    this.OnDorsalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocIdentificacao", DbType = "NVarChar(450)")]
        public string DocIdentificacao {
            get {
                return this._DocIdentificacao;
            }
            set {
                if((this._DocIdentificacao != value)) {
                    this.OnDocIdentificacaoChanging(value);
                    this.SendPropertyChanging();
                    this._DocIdentificacao = value;
                    this.SendPropertyChanged("DocIdentificacao");
                    this.OnDocIdentificacaoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProvaID", DbType = "Int NOT NULL")]
        public int ProvaID {
            get {
                return this._ProvaID;
            }
            set {
                if((this._ProvaID != value)) {
                    if(this._Prova.HasLoadedOrAssignedValue) {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnProvaIDChanging(value);
                    this.SendPropertyChanging();
                    this._ProvaID = value;
                    this.SendPropertyChanged("ProvaID");
                    this.OnProvaIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Prova_Resultado", Storage = "_Prova", ThisKey = "ProvaID", OtherKey = "ID", IsForeignKey = true)]
        public Prova Prova {
            get {
                return this._Prova.Entity;
            }
            set {
                Prova previousValue = this._Prova.Entity;
                if(((previousValue != value)
                            || (this._Prova.HasLoadedOrAssignedValue == false))) {
                    this.SendPropertyChanging();
                    if((previousValue != null)) {
                        this._Prova.Entity = null;
                        previousValue.Resultados.Remove(this);
                    }
                    this._Prova.Entity = value;
                    if((value != null)) {
                        value.Resultados.Add(this);
                        this._ProvaID = value.ID;
                    } else {
                        this._ProvaID = default(int);
                    }
                    this.SendPropertyChanged("Prova");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Inscricao")]
    public partial class Inscricao : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private System.Nullable<System.DateTime> _DataInscricao;

        private string _Contacto;

        private System.Nullable<int> _Dorsal;

        private System.Nullable<bool> _Pago;

        private string _TamanhoJersey;

        private int _EventoID;

        private string _Nome;

        private string _Sexo;

        private string _Email;

        private string _Equipa;

        private string _TipoInscricao;

        private string _DocIdentificacao;

        private EntityRef<Evento> _Evento;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnDataInscricaoChanging(System.Nullable<System.DateTime> value);
        partial void OnDataInscricaoChanged();
        partial void OnContactoChanging(string value);
        partial void OnContactoChanged();
        partial void OnDorsalChanging(System.Nullable<int> value);
        partial void OnDorsalChanged();
        partial void OnPagoChanging(System.Nullable<bool> value);
        partial void OnPagoChanged();
        partial void OnTamanhoJerseyChanging(string value);
        partial void OnTamanhoJerseyChanged();
        partial void OnEventoIDChanging(int value);
        partial void OnEventoIDChanged();
        partial void OnNomeChanging(string value);
        partial void OnNomeChanged();
        partial void OnSexoChanging(string value);
        partial void OnSexoChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnEquipaChanging(string value);
        partial void OnEquipaChanged();
        partial void OnTipoInscricaoChanging(string value);
        partial void OnTipoInscricaoChanged();
        partial void OnDocIdentificacaoChanging(string value);
        partial void OnDocIdentificacaoChanged();
        #endregion

        public Inscricao() {
            this._Evento = default(EntityRef<Evento>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID {
            get {
                return this._ID;
            }
            set {
                if((this._ID != value)) {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DataInscricao", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DataInscricao {
            get {
                return this._DataInscricao;
            }
            set {
                if((this._DataInscricao != value)) {
                    this.OnDataInscricaoChanging(value);
                    this.SendPropertyChanging();
                    this._DataInscricao = value;
                    this.SendPropertyChanged("DataInscricao");
                    this.OnDataInscricaoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Contacto", DbType = "NVarChar(450)")]
        public string Contacto {
            get {
                return this._Contacto;
            }
            set {
                if((this._Contacto != value)) {
                    this.OnContactoChanging(value);
                    this.SendPropertyChanging();
                    this._Contacto = value;
                    this.SendPropertyChanged("Contacto");
                    this.OnContactoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Dorsal", DbType = "Int")]
        public System.Nullable<int> Dorsal {
            get {
                return this._Dorsal;
            }
            set {
                if((this._Dorsal != value)) {
                    this.OnDorsalChanging(value);
                    this.SendPropertyChanging();
                    this._Dorsal = value;
                    this.SendPropertyChanged("Dorsal");
                    this.OnDorsalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pago", DbType = "Bit")]
        public System.Nullable<bool> Pago {
            get {
                return this._Pago;
            }
            set {
                if((this._Pago != value)) {
                    this.OnPagoChanging(value);
                    this.SendPropertyChanging();
                    this._Pago = value;
                    this.SendPropertyChanged("Pago");
                    this.OnPagoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TamanhoJersey", DbType = "NVarChar(450)")]
        public string TamanhoJersey {
            get {
                return this._TamanhoJersey;
            }
            set {
                if((this._TamanhoJersey != value)) {
                    this.OnTamanhoJerseyChanging(value);
                    this.SendPropertyChanging();
                    this._TamanhoJersey = value;
                    this.SendPropertyChanged("TamanhoJersey");
                    this.OnTamanhoJerseyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EventoID", DbType = "Int NOT NULL")]
        public int EventoID {
            get {
                return this._EventoID;
            }
            set {
                if((this._EventoID != value)) {
                    if(this._Evento.HasLoadedOrAssignedValue) {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnEventoIDChanging(value);
                    this.SendPropertyChanging();
                    this._EventoID = value;
                    this.SendPropertyChanged("EventoID");
                    this.OnEventoIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Nome", DbType = "NVarChar(450)")]
        public string Nome {
            get {
                return this._Nome;
            }
            set {
                if((this._Nome != value)) {
                    this.OnNomeChanging(value);
                    this.SendPropertyChanging();
                    this._Nome = value;
                    this.SendPropertyChanged("Nome");
                    this.OnNomeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Sexo", DbType = "NVarChar(450)")]
        public string Sexo {
            get {
                return this._Sexo;
            }
            set {
                if((this._Sexo != value)) {
                    this.OnSexoChanging(value);
                    this.SendPropertyChanging();
                    this._Sexo = value;
                    this.SendPropertyChanged("Sexo");
                    this.OnSexoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Email", DbType = "NVarChar(450)")]
        public string Email {
            get {
                return this._Email;
            }
            set {
                if((this._Email != value)) {
                    this.OnEmailChanging(value);
                    this.SendPropertyChanging();
                    this._Email = value;
                    this.SendPropertyChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Equipa", DbType = "NVarChar(450)")]
        public string Equipa {
            get {
                return this._Equipa;
            }
            set {
                if((this._Equipa != value)) {
                    this.OnEquipaChanging(value);
                    this.SendPropertyChanging();
                    this._Equipa = value;
                    this.SendPropertyChanged("Equipa");
                    this.OnEquipaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TipoInscricao", DbType = "NVarChar(450)")]
        public string TipoInscricao {
            get {
                return this._TipoInscricao;
            }
            set {
                if((this._TipoInscricao != value)) {
                    this.OnTipoInscricaoChanging(value);
                    this.SendPropertyChanging();
                    this._TipoInscricao = value;
                    this.SendPropertyChanged("TipoInscricao");
                    this.OnTipoInscricaoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocIdentificacao", DbType = "NVarChar(450)")]
        public string DocIdentificacao {
            get {
                return this._DocIdentificacao;
            }
            set {
                if((this._DocIdentificacao != value)) {
                    this.OnDocIdentificacaoChanging(value);
                    this.SendPropertyChanging();
                    this._DocIdentificacao = value;
                    this.SendPropertyChanged("DocIdentificacao");
                    this.OnDocIdentificacaoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Evento_Inscricao", Storage = "_Evento", ThisKey = "EventoID", OtherKey = "ID", IsForeignKey = true)]
        public Evento Evento {
            get {
                return this._Evento.Entity;
            }
            set {
                Evento previousValue = this._Evento.Entity;
                if(((previousValue != value)
                            || (this._Evento.HasLoadedOrAssignedValue == false))) {
                    this.SendPropertyChanging();
                    if((previousValue != null)) {
                        this._Evento.Entity = null;
                        previousValue.Inscricaos.Remove(this);
                    }
                    this._Evento.Entity = value;
                    if((value != null)) {
                        value.Inscricaos.Add(this);
                        this._EventoID = value.ID;
                    } else {
                        this._EventoID = default(int);
                    }
                    this.SendPropertyChanged("Evento");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Prova")]
    public partial class Prova : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private string _Nome;

        private string _Descricao;

        private decimal _Distancia;

        private int _EventoID;

        private EntitySet<Resultado> _Resultados;

        private EntityRef<Evento> _Evento;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnNomeChanging(string value);
        partial void OnNomeChanged();
        partial void OnDescricaoChanging(string value);
        partial void OnDescricaoChanged();
        partial void OnDistanciaChanging(decimal value);
        partial void OnDistanciaChanged();
        partial void OnEventoIDChanging(int value);
        partial void OnEventoIDChanged();
        #endregion

        public Prova() {
            this._Resultados = new EntitySet<Resultado>(new Action<Resultado>(this.attach_Resultados), new Action<Resultado>(this.detach_Resultados));
            this._Evento = default(EntityRef<Evento>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID {
            get {
                return this._ID;
            }
            set {
                if((this._ID != value)) {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Nome", DbType = "NVarChar(450) NOT NULL", CanBeNull = false)]
        public string Nome {
            get {
                return this._Nome;
            }
            set {
                if((this._Nome != value)) {
                    this.OnNomeChanging(value);
                    this.SendPropertyChanging();
                    this._Nome = value;
                    this.SendPropertyChanged("Nome");
                    this.OnNomeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Descricao", DbType = "NVarChar(450) NOT NULL", CanBeNull = false)]
        public string Descricao {
            get {
                return this._Descricao;
            }
            set {
                if((this._Descricao != value)) {
                    this.OnDescricaoChanging(value);
                    this.SendPropertyChanging();
                    this._Descricao = value;
                    this.SendPropertyChanged("Descricao");
                    this.OnDescricaoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Distancia", DbType = "Decimal(18,4) NOT NULL")]
        public decimal Distancia {
            get {
                return this._Distancia;
            }
            set {
                if((this._Distancia != value)) {
                    this.OnDistanciaChanging(value);
                    this.SendPropertyChanging();
                    this._Distancia = value;
                    this.SendPropertyChanged("Distancia");
                    this.OnDistanciaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EventoID", DbType = "Int NOT NULL")]
        public int EventoID {
            get {
                return this._EventoID;
            }
            set {
                if((this._EventoID != value)) {
                    if(this._Evento.HasLoadedOrAssignedValue) {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnEventoIDChanging(value);
                    this.SendPropertyChanging();
                    this._EventoID = value;
                    this.SendPropertyChanged("EventoID");
                    this.OnEventoIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Prova_Resultado", Storage = "_Resultados", ThisKey = "ID", OtherKey = "ProvaID")]
        public EntitySet<Resultado> Resultados {
            get {
                return this._Resultados;
            }
            set {
                this._Resultados.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Evento_Prova", Storage = "_Evento", ThisKey = "EventoID", OtherKey = "ID", IsForeignKey = true)]
        public Evento Evento {
            get {
                return this._Evento.Entity;
            }
            set {
                Evento previousValue = this._Evento.Entity;
                if(((previousValue != value)
                            || (this._Evento.HasLoadedOrAssignedValue == false))) {
                    this.SendPropertyChanging();
                    if((previousValue != null)) {
                        this._Evento.Entity = null;
                        previousValue.Provas.Remove(this);
                    }
                    this._Evento.Entity = value;
                    if((value != null)) {
                        value.Provas.Add(this);
                        this._EventoID = value.ID;
                    } else {
                        this._EventoID = default(int);
                    }
                    this.SendPropertyChanged("Evento");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_Resultados(Resultado entity) {
            this.SendPropertyChanging();
            entity.Prova = this;
        }

        private void detach_Resultados(Resultado entity) {
            this.SendPropertyChanging();
            entity.Prova = null;
        }
    }
}
#pragma warning restore 1591
